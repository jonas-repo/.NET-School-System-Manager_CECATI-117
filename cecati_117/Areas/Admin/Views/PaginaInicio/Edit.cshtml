@model cecati_117.Models.InicioCarrusel

@{
    ViewBag.Title = "Editar carrusel";
    string[] ArregloCadenas = ViewBag.ListaCadenas;
}

@*<style>
        input[type="file"] {
            display: none;
        }

        .custom-file-upload {
            border: 1px solid #ccc;
            display: inline-block;
            padding: 6px 12px;
            cursor: pointer;
        }
    </style>*@
<div class="page-title">
    <div class="title_left">
        <h3>Carrusel</h3>
    </div>
</div>
<div class="clearfix"></div>
<div class="row">
    <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Editar carrusel de imagenes</h2>
                <ul class="nav navbar-right panel_toolbox">
                    <li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                <br />
                @if (ViewBag.NoEsImagen != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @ViewBag.NoEsImagen
                    </div>
                }
                @using (Html.BeginForm("Edit", "PaginaInicio", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.InicioCarrusel_ID)
                    @Html.HiddenFor(model => model.InicioCarrusel_Fecha)
                    @Html.HiddenFor(model => model.InicioCarrusel_ImagenURL)
                    @Html.HiddenFor(model => model.InicioCarrusel_MiniImagenUrl)

                    <input type="hidden" value="@Model.InicioCarrusel_ImagenURL" name="imagenAnterior" />
                    <input type="hidden" value="@Model.InicioCarrusel_MiniImagenUrl" name="imagenAnterior" />

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.InicioCarrusel_Titulo, htmlAttributes: new { @class = "control-label col-md-2 col-lg-2 col-sm-2 col-xs-2" })
                            <div class="col-md-10 col-lg-10 col-sm-12 col-xs-12">
                                @Html.EditorFor(model => model.InicioCarrusel_Titulo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InicioCarrusel_Titulo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InicioCarrusel_ImagenURL, htmlAttributes: new { @class = "control-label col-md-2 col-lg-2 col-sm-2 col-xs-2" })
                            <div class="col-md-10 col-lg-10 col-sm-12 col-xs-12">
                                @*@Html.(model => model.InicioCarrusel_ImagenURL, new { htmlAttributes = new { @class = "form-control" } })*@

                                <div class="col-md-55">
                                    <div class="thumbnail">
                                        <div class="image view view-first">
                                            <img style="width: 100%; display: block;" src="@Html.DisplayTextFor(modelItem => modelItem.InicioCarrusel_ImagenURL)" alt="imagen" id="image_upload_preview" />

                                        </div>
                                        <div class="caption">
                                            @*<label for="InputFile" class="custom-file-upload">
                                        <i class="glyphicon glyphicon-upload"></i> Subir imagen
                                    </label>*@
                                            <input id="InputFile" type="file" class="form-control" name="imagen" />
                                        </div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.InicioCarrusel_ImagenURL, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.InicioCarrusel_MiniImagenUrl, htmlAttributes: new { @class = "control-label col-md-2 col-lg-2 col-sm-2 col-xs-2" })
                            <div class="col-md-10 col-lg-10 col-sm-12 col-xs-12">
                                @*@Html.(model => model.InicioCarrusel_ImagenURL, new { htmlAttributes = new { @class = "form-control" } })*@

                                <div class="col-md-55">
                                    <div class="thumbnail">
                                        <div class="image view view-first">
                                            <img style="width: 100%; display: block;" src="@Html.DisplayTextFor(modelItem => modelItem.InicioCarrusel_MiniImagenUrl)" alt="miniImagen" id="image_upload_preview2" />
                                        </div>
                                        <div class="caption">
                                            @*<label for="InputFile" class="custom-file-upload">
                                        <i class="glyphicon glyphicon-upload"></i> Subir imagen
                                    </label>*@
                                            <input id="InputFile2" type="file" class="form-control" name="miniImagen" />
                                        </div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.InicioCarrusel_MiniImagenUrl, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InicioCarrusel_ListaAprendizaje, htmlAttributes: new { @class = "control-label col-md-2 col-lg-2 col-sm-2 col-xs-2" })
                            <div class="col-md-10 col-lg-10 col-sm-12 col-xs-12">
                                @*@Html.EditorFor(model => model.InicioCarrusel_ListaAprendizaje, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InicioCarrusel_ListaAprendizaje, "", new { @class = "text-danger" })*@
                                <table class="table table-striped table-bordered" id="tabla_listaAprendizaje">
                                    <thead>
                                        <tr>
                                            <th>Nombre de actividad a aprender</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var cadena in ArregloCadenas)
                                        {
                                            <tr>
                                                <td>
                                                    <input type="text" class="form-control" value="@cadena" name="actividades" />
                                                </td>
                                                <td>
                                                    <a type="button" class="btn btn-danger borrar">Eliminar</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <input type="text" class="form-control" id="input_agregarListaAprendizaje" />
                                <button type="button" class="btn btn-default" id="botonAgregarListaAprendizaje">Agregar a lista de aprendizaje</button>
                            </div>
                        </div>
                        <div class="ln_solid"></div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-lg-offset-2 col-md-10 col-lg-10 col-sm-12 col-xs-12">
                                <input type="submit" value="Guardar cambios" class="btn btn-success" />
                                <a href="@Url.Action("Index","PaginaInicio")" class="btn btn-default">Cancelar</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script>
    //*************************** para agregar a la tabla de la lista de aprendizaje
    $('#botonAgregarListaAprendizaje').click(function () {

        var texto_input_agregarListaAprendizaje = $('#input_agregarListaAprendizaje').val();


        $('#tabla_listaAprendizaje > tbody:last-child').append(
            "<tr>"
            + "<td><input type='text' class='form-control' value='" + texto_input_agregarListaAprendizaje + "' name='actividades' /></td>"
            + "<td> <a type='button' class='btn btn-danger borrar'>Eliminar</a></td>"
            + "</tr > "
        );
        $('#input_agregarListaAprendizaje').val('');
    });

    $('#tabla_listaAprendizaje').on('click', '.borrar', function () {
        $(this).closest('tr').remove();
    });
    //*****************************

    //*************************** para previsualizar una imagen antes de cargarla a la base de datos
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#image_upload_preview').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#InputFile").change(function () {
        readURL(this);
    });
    //*******************************************************************************************************
    //*************************** para previsualizar una imagen antes de cargarla a la base de datos
    function readURL2(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#image_upload_preview2').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#InputFile2").change(function () {
        readURL2(this);
    });
            //*******************************************************************************************************

</script>
